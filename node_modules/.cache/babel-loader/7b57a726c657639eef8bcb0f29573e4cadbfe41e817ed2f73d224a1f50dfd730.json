{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchPersonData } from \"./basic-infos-action\";\nconst initialState = {\n  name: {\n    first_name: \"first\",\n    middle_name: \"middle\",\n    last_name: \"last\"\n  },\n  role: \"role\",\n  about_me: \"aboutme\",\n  contact: {\n    mail: \"mail\",\n    phone: \"phone\",\n    location: \"city\",\n    linkedin: \"link\"\n  }\n};\nexport const getPersonData = createAsyncThunk(\"basicInfos/fetchData\", async () => {\n  return await fetchPersonData();\n  // const response = await fetchPersonData();\n  //     const data = await response.afk.basic_infos;\n  //   console.log(data);\n\n  //   const person: PersonBasics = {\n  //     name: {\n  //       first_name: data.first_name,\n  //       middle_name: data.middle_name,\n  //       last_name: data.last_name,\n  //     },\n  //     role: data.role,\n  //     about_me: data.about_me,\n  //     contact: {\n  //       mail: data.mail,\n  //       phone: data.phone,\n  //       location: data.location,\n  //       linkedin: data.linkedin,\n  //     },\n  //   };\n  //   return person;\n});\n\nconst basicInfoSlice = createSlice({\n  name: \"basicInfos\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getPersonData.pending, state => {\n      console.log(\"pending\");\n    });\n    builder.addCase(getPersonData.rejected, state => {\n      console.log(\"rejected\");\n    });\n    builder.addCase(getPersonData.fulfilled, (state, action) => {\n      console.log(\"fulfilled\");\n\n      //   state.name = action.payload.name;\n      //   state.role = action.payload.role;\n      //   state.contact = action.payload.contact;\n      //   state.about_me = action.payload.about_me;\n    });\n  }\n});\n\nexport const selectPersonBasics = state => {\n  return state.basics;\n};\nexport default basicInfoSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchPersonData","initialState","name","first_name","middle_name","last_name","role","about_me","contact","mail","phone","location","linkedin","getPersonData","basicInfoSlice","reducers","extraReducers","builder","addCase","pending","state","console","log","rejected","fulfilled","action","selectPersonBasics","basics","reducer"],"sources":["/Users/akos/Development/gitRepos/resume/src/store/basic-infos/basic-info-slice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../resume-store\";\nimport { fetchPersonData } from \"./basic-infos-action\";\n\nexport type NameType = {\n  first_name: string;\n  middle_name: string;\n  last_name: string;\n};\n\ntype ContactType = {\n  mail: string;\n  phone: string;\n  location: string;\n  linkedin: string;\n};\n\nexport type PersonBasics = {\n  name: NameType;\n  role: string;\n  about_me: string;\n  contact: ContactType;\n};\n\nconst initialState: PersonBasics = {\n  name: { first_name: \"first\", middle_name: \"middle\", last_name: \"last\" },\n  role: \"role\",\n  about_me: \"aboutme\",\n  contact: { mail: \"mail\", phone: \"phone\", location: \"city\", linkedin: \"link\" },\n};\n\nexport const getPersonData = createAsyncThunk(\n  \"basicInfos/fetchData\",\n  async () => {\n    return await fetchPersonData();\n    // const response = await fetchPersonData();\n    //     const data = await response.afk.basic_infos;\n    //   console.log(data);\n\n    //   const person: PersonBasics = {\n    //     name: {\n    //       first_name: data.first_name,\n    //       middle_name: data.middle_name,\n    //       last_name: data.last_name,\n    //     },\n    //     role: data.role,\n    //     about_me: data.about_me,\n    //     contact: {\n    //       mail: data.mail,\n    //       phone: data.phone,\n    //       location: data.location,\n    //       linkedin: data.linkedin,\n    //     },\n    //   };\n    //   return person;\n  }\n);\n\nconst basicInfoSlice = createSlice({\n  name: \"basicInfos\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getPersonData.pending, (state) => {\n      console.log(\"pending\");\n    });\n\n    builder.addCase(getPersonData.rejected, (state) => {\n      console.log(\"rejected\");\n    });\n\n    builder.addCase(getPersonData.fulfilled, (state, action) => {\n      console.log(\"fulfilled\");\n\n      //   state.name = action.payload.name;\n      //   state.role = action.payload.role;\n      //   state.contact = action.payload.contact;\n      //   state.about_me = action.payload.about_me;\n    });\n  },\n});\n\nexport const selectPersonBasics = (state: RootState) => {\n  return state.basics;\n};\n\nexport default basicInfoSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,SAASC,eAAe,QAAQ,sBAAsB;AAsBtD,MAAMC,YAA0B,GAAG;EACjCC,IAAI,EAAE;IAAEC,UAAU,EAAE,OAAO;IAAEC,WAAW,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAO,CAAC;EACvEC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,SAAS;EACnBC,OAAO,EAAE;IAAEC,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE,OAAO;IAAEC,QAAQ,EAAE,MAAM;IAAEC,QAAQ,EAAE;EAAO;AAC9E,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGf,gBAAgB,CAC3C,sBAAsB,EACtB,YAAY;EACV,OAAO,MAAME,eAAe,EAAE;EAC9B;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,CACF;;AAED,MAAMc,cAAc,GAAGf,WAAW,CAAC;EACjCG,IAAI,EAAE,YAAY;EAClBD,YAAY;EACZc,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACL,aAAa,CAACM,OAAO,EAAGC,KAAK,IAAK;MAChDC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC,CAAC;IAEFL,OAAO,CAACC,OAAO,CAACL,aAAa,CAACU,QAAQ,EAAGH,KAAK,IAAK;MACjDC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACzB,CAAC,CAAC;IAEFL,OAAO,CAACC,OAAO,CAACL,aAAa,CAACW,SAAS,EAAE,CAACJ,KAAK,EAAEK,MAAM,KAAK;MAC1DJ,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;;MAExB;MACA;MACA;MACA;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF,OAAO,MAAMI,kBAAkB,GAAIN,KAAgB,IAAK;EACtD,OAAOA,KAAK,CAACO,MAAM;AACrB,CAAC;AAED,eAAeb,cAAc,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}