{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  interval: \"\",\n  position: \"\",\n  unit: \"\",\n  company: \"\",\n  place: \"\",\n  description: \"\",\n  skills: []\n};\nexport const getExperience = createAsyncThunk(\"experience/fetchData\", async () => {\n  const response = await (await fetch(`http://localhost:3000/resume.json`)).json();\n  const data = await response.afk.work_experience;\n  console.log(data);\n  const experience = {\n    interval: data.interval,\n    position: data.position,\n    unit: data.unit,\n    company: data.company,\n    place: data.place,\n    description: data.description,\n    skills: data.skills\n  };\n});\nconst experienceSlice = createSlice({\n  name: \"experience\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getExperience.fulfilled, (state, action) => {});\n  }\n});\nexport const selectExperience = state => {\n  return state.experience;\n};\nexport default experienceSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","interval","position","unit","company","place","description","skills","getExperience","response","fetch","json","data","afk","work_experience","console","log","experience","experienceSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","selectExperience","reducer"],"sources":["/Users/akos/Development/gitRepos/resume/src/store/experience/experience-slice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../resume-store\";\n\nexport type ExperienceType = {\n  interval: string;\n  position: string;\n  unit: string;\n  company: string;\n  place: string;\n  description: string;\n};\n\ntype ExperienceData = {\n  experience: ExperienceType;\n  skills: string[];\n};\n\nconst initialState: ExperienceType = {\n  interval: \"\",\n  position: \"\",\n  unit: \"\",\n  company: \"\",\n  place: \"\",\n  description: \"\",\n  skills: [],\n};\nexport const getExperience = createAsyncThunk(\n  \"experience/fetchData\",\n  async () => {\n    const response = await (\n      await fetch(`http://localhost:3000/resume.json`)\n    ).json();\n\n    const data = await response.afk.work_experience;\n    console.log(data);\n    const experience: ExperienceType = {\n      interval: data.interval,\n      position: data.position,\n      unit: data.unit,\n      company: data.company,\n      place: data.place,\n      description: data.description,\n      skills: data.skills,\n    };\n  }\n);\nconst experienceSlice = createSlice({\n  name: \"experience\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getExperience.fulfilled, (state, action) => {});\n  },\n});\n\nexport const selectExperience = (state: RootState) => {\n  return state.experience;\n};\n\nexport default experienceSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAiBhE,MAAMC,YAA4B,GAAG;EACnCC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,EAAE;EACZC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,EAAE;EACXC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,EAAE;EACfC,MAAM,EAAE;AACV,CAAC;AACD,OAAO,MAAMC,aAAa,GAAGV,gBAAgB,CAC3C,sBAAsB,EACtB,YAAY;EACV,MAAMW,QAAQ,GAAG,MAAM,CACrB,MAAMC,KAAK,CAAE,mCAAkC,CAAC,EAChDC,IAAI,EAAE;EAER,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,GAAG,CAACC,eAAe;EAC/CC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACjB,MAAMK,UAA0B,GAAG;IACjChB,QAAQ,EAAEW,IAAI,CAACX,QAAQ;IACvBC,QAAQ,EAAEU,IAAI,CAACV,QAAQ;IACvBC,IAAI,EAAES,IAAI,CAACT,IAAI;IACfC,OAAO,EAAEQ,IAAI,CAACR,OAAO;IACrBC,KAAK,EAAEO,IAAI,CAACP,KAAK;IACjBC,WAAW,EAAEM,IAAI,CAACN,WAAW;IAC7BC,MAAM,EAAEK,IAAI,CAACL;EACf,CAAC;AACH,CAAC,CACF;AACD,MAAMW,eAAe,GAAGnB,WAAW,CAAC;EAClCoB,IAAI,EAAE,YAAY;EAClBnB,YAAY;EACZoB,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACf,aAAa,CAACgB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK,CAAC,CAAC,CAAC;EACjE;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,gBAAgB,GAAIF,KAAgB,IAAK;EACpD,OAAOA,KAAK,CAACR,UAAU;AACzB,CAAC;AAED,eAAeC,eAAe,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}