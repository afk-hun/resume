{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { domainLink } from \"../../App\";\nconst initialState = {\n  name: {\n    first_name: \"first\",\n    middle_name: \"middle\",\n    last_name: \"last\"\n  },\n  role: \"role\",\n  about_me: \"aboutme\",\n  contact: {\n    mail: \"mail\",\n    phone: \"phone\",\n    location: \"city\",\n    linkedin: \"link\"\n  }\n};\nexport const getPersonData = createAsyncThunk(\"basicInfos/fetchData\", async () => {\n  const response = await (await fetch(domainLink)).json();\n  const data = await response.afk.basic_infos;\n  console.log(data);\n  const person = {\n    name: {\n      first_name: data.first_name,\n      middle_name: data.middle_name,\n      last_name: data.last_name\n    },\n    role: data.role,\n    about_me: data.about_me,\n    contact: {\n      mail: data.contact.mail,\n      phone: data.contact.phone,\n      location: data.contact.location,\n      linkedin: data.contact.linkedin\n    }\n  };\n  return person;\n});\nconst basicInfoSlice = createSlice({\n  name: \"basicInfos\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getPersonData.fulfilled, (state, action) => {\n      console.log(\"basicinfo\");\n      state.name = action.payload.name;\n      state.role = action.payload.role;\n      state.contact = action.payload.contact;\n      state.about_me = action.payload.about_me;\n    });\n  }\n});\nexport const selectPersonBasics = state => {\n  return state.basics;\n};\nexport default basicInfoSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","domainLink","initialState","name","first_name","middle_name","last_name","role","about_me","contact","mail","phone","location","linkedin","getPersonData","response","fetch","json","data","afk","basic_infos","console","log","person","basicInfoSlice","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","selectPersonBasics","basics","reducer"],"sources":["/Users/akos/Development/gitRepos/resume/src/store/basic-infos/basic-info-slice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { domainLink } from \"../../App\";\nimport { RootState } from \"../resume-store\";\n\nexport type NameType = {\n  first_name: string;\n  middle_name: string;\n  last_name: string;\n};\n\ntype ContactType = {\n  mail: string;\n  phone: string;\n  location: string;\n  linkedin: string;\n};\n\nexport type PersonBasics = {\n  name: NameType;\n  role: string;\n  about_me: string;\n  contact: ContactType;\n};\n\nconst initialState: PersonBasics = {\n  name: { first_name: \"first\", middle_name: \"middle\", last_name: \"last\" },\n  role: \"role\",\n  about_me: \"aboutme\",\n  contact: { mail: \"mail\", phone: \"phone\", location: \"city\", linkedin: \"link\" },\n};\n\nexport const getPersonData = createAsyncThunk(\n  \"basicInfos/fetchData\",\n  async () => {\n    const response = await (await fetch(domainLink)).json();\n\n    const data = await response.afk.basic_infos;\n    console.log(data);\n\n    const person: PersonBasics = {\n      name: {\n        first_name: data.first_name,\n        middle_name: data.middle_name,\n        last_name: data.last_name,\n      },\n      role: data.role,\n      about_me: data.about_me,\n      contact: {\n        mail: data.contact.mail,\n        phone: data.contact.phone,\n        location: data.contact.location,\n        linkedin: data.contact.linkedin,\n      },\n    };\n    return person;\n  }\n);\n\nconst basicInfoSlice = createSlice({\n  name: \"basicInfos\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getPersonData.fulfilled, (state, action) => {\n      console.log(\"basicinfo\");\n      state.name = action.payload.name;\n      state.role = action.payload.role;\n      state.contact = action.payload.contact;\n      state.about_me = action.payload.about_me;\n    });\n  },\n});\n\nexport const selectPersonBasics = (state: RootState) => {\n  return state.basics;\n};\n\nexport default basicInfoSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,UAAU,QAAQ,WAAW;AAuBtC,MAAMC,YAA0B,GAAG;EACjCC,IAAI,EAAE;IAAEC,UAAU,EAAE,OAAO;IAAEC,WAAW,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAO,CAAC;EACvEC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,SAAS;EACnBC,OAAO,EAAE;IAAEC,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE,OAAO;IAAEC,QAAQ,EAAE,MAAM;IAAEC,QAAQ,EAAE;EAAO;AAC9E,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGf,gBAAgB,CAC3C,sBAAsB,EACtB,YAAY;EACV,MAAMgB,QAAQ,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACf,UAAU,CAAC,EAAEgB,IAAI,EAAE;EAEvD,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,GAAG,CAACC,WAAW;EAC3CC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EAEjB,MAAMK,MAAoB,GAAG;IAC3BpB,IAAI,EAAE;MACJC,UAAU,EAAEc,IAAI,CAACd,UAAU;MAC3BC,WAAW,EAAEa,IAAI,CAACb,WAAW;MAC7BC,SAAS,EAAEY,IAAI,CAACZ;IAClB,CAAC;IACDC,IAAI,EAAEW,IAAI,CAACX,IAAI;IACfC,QAAQ,EAAEU,IAAI,CAACV,QAAQ;IACvBC,OAAO,EAAE;MACPC,IAAI,EAAEQ,IAAI,CAACT,OAAO,CAACC,IAAI;MACvBC,KAAK,EAAEO,IAAI,CAACT,OAAO,CAACE,KAAK;MACzBC,QAAQ,EAAEM,IAAI,CAACT,OAAO,CAACG,QAAQ;MAC/BC,QAAQ,EAAEK,IAAI,CAACT,OAAO,CAACI;IACzB;EACF,CAAC;EACD,OAAOU,MAAM;AACf,CAAC,CACF;AAED,MAAMC,cAAc,GAAGxB,WAAW,CAAC;EACjCG,IAAI,EAAE,YAAY;EAClBD,YAAY;EACZuB,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACd,aAAa,CAACe,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1DV,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACxBQ,KAAK,CAAC3B,IAAI,GAAG4B,MAAM,CAACC,OAAO,CAAC7B,IAAI;MAChC2B,KAAK,CAACvB,IAAI,GAAGwB,MAAM,CAACC,OAAO,CAACzB,IAAI;MAChCuB,KAAK,CAACrB,OAAO,GAAGsB,MAAM,CAACC,OAAO,CAACvB,OAAO;MACtCqB,KAAK,CAACtB,QAAQ,GAAGuB,MAAM,CAACC,OAAO,CAACxB,QAAQ;IAC1C,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAMyB,kBAAkB,GAAIH,KAAgB,IAAK;EACtD,OAAOA,KAAK,CAACI,MAAM;AACrB,CAAC;AAED,eAAeV,cAAc,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}