{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  name: [],\n  courses: [],\n  languages: []\n};\nexport const getPersonData = createAsyncThunk(\"basicInfos/fetchData\", async () => {\n  const response = await (await fetch(`http://localhost:3000/resume.json`)).json();\n  const data = await response.afk.education;\n  console.log(data);\n  const person = {\n    name: {\n      first_name: data.first_name,\n      middle_name: data.middle_name,\n      last_name: data.last_name\n    },\n    role: data.role,\n    about_me: data.about_me,\n    contact: {\n      mail: data.contact.mail,\n      phone: data.contact.phone,\n      location: data.contact.location,\n      linkedin: data.contact.linkedin\n    }\n  };\n  return person;\n});\nconst educationSlice = createSlice({\n  name: \"basicInfos\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getPersonData.fulfilled, (state, action) => {\n      console.log(\"fulfilled\");\n      state.name = action.payload.name;\n      state.role = action.payload.role;\n      state.contact = action.payload.contact;\n      state.about_me = action.payload.about_me;\n    });\n  }\n});\nexport const selectEducation = state => {\n  return state.education;\n};\nexport default educationSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","name","courses","languages","getPersonData","response","fetch","json","data","afk","education","console","log","person","first_name","middle_name","last_name","role","about_me","contact","mail","phone","location","linkedin","educationSlice","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","selectEducation","reducer"],"sources":["/Users/akos/Development/gitRepos/resume/src/store/education/education-slice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../resume-store\";\n\ntype SchoolType = {\n  degree: string;\n  institution: string;\n  interval: string;\n};\n\ntype LanguagesType = {\n  name: string;\n  knowledge: number;\n  motivation: number;\n};\n\ntype EducationType = {\n  name: SchoolType[];\n  courses: string[];\n  languages: LanguagesType[];\n};\n\nconst initialState: EducationType = {\n  name: [],\n  courses: [],\n  languages: [],\n};\n\nexport const getPersonData = createAsyncThunk(\n  \"basicInfos/fetchData\",\n  async () => {\n    const response = await (\n      await fetch(`http://localhost:3000/resume.json`)\n    ).json();\n\n    const data = await response.afk.education;\n    console.log(data);\n\n    const person: PersonBasics = {\n      name: {\n        first_name: data.first_name,\n        middle_name: data.middle_name,\n        last_name: data.last_name,\n      },\n      role: data.role,\n      about_me: data.about_me,\n      contact: {\n        mail: data.contact.mail,\n        phone: data.contact.phone,\n        location: data.contact.location,\n        linkedin: data.contact.linkedin,\n      },\n    };\n    return person;\n  }\n);\n\nconst educationSlice = createSlice({\n  name: \"basicInfos\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getPersonData.fulfilled, (state, action) => {\n      console.log(\"fulfilled\");\n      state.name = action.payload.name;\n      state.role = action.payload.role;\n      state.contact = action.payload.contact;\n      state.about_me = action.payload.about_me;\n    });\n  },\n});\n\nexport const selectEducation = (state: RootState) => {\n  return state.education;\n};\n\nexport default educationSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAqBhE,MAAMC,YAA2B,GAAG;EAClCC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,EAAE;EACXC,SAAS,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGN,gBAAgB,CAC3C,sBAAsB,EACtB,YAAY;EACV,MAAMO,QAAQ,GAAG,MAAM,CACrB,MAAMC,KAAK,CAAE,mCAAkC,CAAC,EAChDC,IAAI,EAAE;EAER,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,GAAG,CAACC,SAAS;EACzCC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EAEjB,MAAMK,MAAoB,GAAG;IAC3BZ,IAAI,EAAE;MACJa,UAAU,EAAEN,IAAI,CAACM,UAAU;MAC3BC,WAAW,EAAEP,IAAI,CAACO,WAAW;MAC7BC,SAAS,EAAER,IAAI,CAACQ;IAClB,CAAC;IACDC,IAAI,EAAET,IAAI,CAACS,IAAI;IACfC,QAAQ,EAAEV,IAAI,CAACU,QAAQ;IACvBC,OAAO,EAAE;MACPC,IAAI,EAAEZ,IAAI,CAACW,OAAO,CAACC,IAAI;MACvBC,KAAK,EAAEb,IAAI,CAACW,OAAO,CAACE,KAAK;MACzBC,QAAQ,EAAEd,IAAI,CAACW,OAAO,CAACG,QAAQ;MAC/BC,QAAQ,EAAEf,IAAI,CAACW,OAAO,CAACI;IACzB;EACF,CAAC;EACD,OAAOV,MAAM;AACf,CAAC,CACF;AAED,MAAMW,cAAc,GAAGzB,WAAW,CAAC;EACjCE,IAAI,EAAE,YAAY;EAClBD,YAAY;EACZyB,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACxB,aAAa,CAACyB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1DpB,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACxBkB,KAAK,CAAC7B,IAAI,GAAG8B,MAAM,CAACC,OAAO,CAAC/B,IAAI;MAChC6B,KAAK,CAACb,IAAI,GAAGc,MAAM,CAACC,OAAO,CAACf,IAAI;MAChCa,KAAK,CAACX,OAAO,GAAGY,MAAM,CAACC,OAAO,CAACb,OAAO;MACtCW,KAAK,CAACZ,QAAQ,GAAGa,MAAM,CAACC,OAAO,CAACd,QAAQ;IAC1C,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAMe,eAAe,GAAIH,KAAgB,IAAK;EACnD,OAAOA,KAAK,CAACpB,SAAS;AACxB,CAAC;AAED,eAAec,cAAc,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}