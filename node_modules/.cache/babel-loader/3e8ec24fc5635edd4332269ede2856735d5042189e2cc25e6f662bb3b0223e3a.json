{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { domainLink } from \"../../App\";\nconst initialState = {\n  skills: [],\n  experience: []\n};\nexport const getExperience = createAsyncThunk(\"experience/fetchData\", async () => {\n  const response = await (await fetch(domainLink)).json();\n  const data = await response.afk.work_experience;\n  console.log(data);\n  const experience = {\n    experience: data.experiences,\n    skills: data.skills\n  };\n  return experience;\n});\nconst experienceSlice = createSlice({\n  name: \"experience\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getExperience.fulfilled, (state, action) => {\n      state.experience = action.payload.experience;\n      state.skills = action.payload.skills;\n    });\n  }\n});\nexport const selectExperience = state => {\n  return state.experience;\n};\nexport default experienceSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","domainLink","initialState","skills","experience","getExperience","response","fetch","json","data","afk","work_experience","console","log","experiences","experienceSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","selectExperience","reducer"],"sources":["/Users/akos/Development/gitRepos/resume/src/store/experience/experience-slice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { domainLink } from \"../../App\";\nimport { RootState } from \"../resume-store\";\n\nexport type ExperienceType = {\n  interval: string;\n  position: string;\n  unit: string;\n  company: string;\n  place: string;\n  description: string;\n};\n\ntype ExperienceData = {\n  experience: ExperienceType[];\n  skills: string[];\n};\n\nconst initialState: ExperienceData = {\n  skills: [],\n  experience: [],\n};\nexport const getExperience = createAsyncThunk(\n  \"experience/fetchData\",\n  async () => {\n    const response = await (await fetch(domainLink)).json();\n\n    const data = await response.afk.work_experience;\n    console.log(data);\n    const experience: ExperienceData = {\n      experience: data.experiences,\n      skills: data.skills,\n    };\n\n    return experience;\n  }\n);\nconst experienceSlice = createSlice({\n  name: \"experience\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getExperience.fulfilled, (state, action) => {\n      state.experience = action.payload.experience;\n      state.skills = action.payload.skills;\n    });\n  },\n});\n\nexport const selectExperience = (state: RootState) => {\n  return state.experience;\n};\n\nexport default experienceSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,UAAU,QAAQ,WAAW;AAiBtC,MAAMC,YAA4B,GAAG;EACnCC,MAAM,EAAE,EAAE;EACVC,UAAU,EAAE;AACd,CAAC;AACD,OAAO,MAAMC,aAAa,GAAGN,gBAAgB,CAC3C,sBAAsB,EACtB,YAAY;EACV,MAAMO,QAAQ,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACN,UAAU,CAAC,EAAEO,IAAI,EAAE;EAEvD,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,GAAG,CAACC,eAAe;EAC/CC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACjB,MAAML,UAA0B,GAAG;IACjCA,UAAU,EAAEK,IAAI,CAACK,WAAW;IAC5BX,MAAM,EAAEM,IAAI,CAACN;EACf,CAAC;EAED,OAAOC,UAAU;AACnB,CAAC,CACF;AACD,MAAMW,eAAe,GAAGf,WAAW,CAAC;EAClCgB,IAAI,EAAE,YAAY;EAClBd,YAAY;EACZe,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACf,aAAa,CAACgB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1DD,KAAK,CAAClB,UAAU,GAAGmB,MAAM,CAACC,OAAO,CAACpB,UAAU;MAC5CkB,KAAK,CAACnB,MAAM,GAAGoB,MAAM,CAACC,OAAO,CAACrB,MAAM;IACtC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAMsB,gBAAgB,GAAIH,KAAgB,IAAK;EACpD,OAAOA,KAAK,CAAClB,UAAU;AACzB,CAAC;AAED,eAAeW,eAAe,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}